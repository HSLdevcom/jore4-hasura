type Mutation {
  combineTimetables(arg1: CombineTimetablesInput!): CombineTimetablesOutput
}

type Mutation {
  replaceTimetables(arg1: ReplaceTimetablesInput!): ReplaceTimetablesOutput
}

type Query {
  toCombineTargetVehicleScheduleFrameId(
    arg1: ToCombineTargetVehicleScheduleFrameIdInput!
  ): ToCombineTargetVehicleScheduleFrameIdOutput
}

type Query {
  toReplaceVehicleScheduleFrameIds(
    arg1: ToReplaceVehicleScheduleFrameIdsInput!
  ): ToReplaceVehicleScheduleFrameIdsOutput
}

input CombineTimetablesInput {
  stagingVehicleScheduleFrameIds: [uuid]!
  targetPriority: Int!
}

input ReplaceTimetablesInput {
  stagingVehicleScheduleFrameIds: [uuid]!
  targetPriority: Int!
}

input ToCombineTargetVehicleScheduleFrameIdInput {
  stagingVehicleScheduleFrameId: uuid!
  targetPriority: Int!
}

input ToReplaceVehicleScheduleFrameIdsInput {
  stagingVehicleScheduleFrameId: uuid!
  targetPriority: Int!
}

type CombineTimetablesOutput {
  combinedIntoVehicleScheduleFrameIds: [uuid]!
}

type ReplaceTimetablesOutput {
  replacedVehicleScheduleFrameIds: [uuid]!
}

type ToCombineTargetVehicleScheduleFrameIdOutput {
  toCombineTargetVehicleScheduleFrameId: uuid!
}

type ToReplaceVehicleScheduleFrameIdsOutput {
  toReplaceVehicleScheduleFrameIds: [uuid]!
}
