name: Push image to Docker hub and run e2e tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Build & Push docker image to Docker Hub
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: Pull previous image to support caching
        run: docker pull $IMAGE_NAME:generic || >&2 echo "Previous image not found"

      - name: build and tag docker images
        run: |
          docker build \
            --target hasura-generic \
            --cache-from=$IMAGE_NAME:generic \
            -t $IMAGE_NAME:generic \
            -t $IMAGE_NAME:generic-$COMMIT_ID \
            .

          docker build \
            --target hasura-hsl \
            --cache-from=$IMAGE_NAME:generic \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:hsl-$COMMIT_ID \
            .

          docker build \
            --target hasura-seed \
            --cache-from=$IMAGE_NAME:latest \
            -t $IMAGE_NAME:seed-data \
            -t $IMAGE_NAME:seed-$COMMIT_ID \
            .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JORE4_DOCKERHUB_USER }}
          password: ${{ secrets.JORE4_DOCKERHUB_TOKEN }}

      - name: Push dev builds to Docker Hub
        run: |
          docker push $IMAGE_NAME:generic-$COMMIT_ID
          docker push $IMAGE_NAME:hsl-$COMMIT_ID
          docker push $IMAGE_NAME:seed-$COMMIT_ID

      - name: Push :latest tag to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push $IMAGE_NAME:generic
          docker push $IMAGE_NAME:seed-data
          docker push $IMAGE_NAME:latest

  run_e2e_tests:
    needs: push_to_registry
    name: Run e2e tests
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          # note: cannot run e2e tests for generic image as the UI needs the hsl-specific migrations
          - imagePrefix: 'generic-' # generic image
            runE2ETests: false
          - imagePrefix: 'seed-' # image with seed data
            runE2ETests: true
          - imagePrefix: 'hsl-' # production image
            runE2ETests: true

    steps:
      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: start e2e env
        uses: HSLdevcom/jore4-flux/github-actions/setup-e2e-environment@setup-e2e-environment-v1
        with:
          hasura_version: '${{ env.IMAGE_NAME }}:${{ matrix.imagePrefix }}${{ env.COMMIT_ID }}'

      - name: run e2e smoke tests
        id: tests
        if: ${{ matrix.runE2ETests }}
        uses: HSLdevcom/jore4-robot/github-actions/run-rf-tests@actions-v1
        with:
          included_tag: smoke
          e2e_username: ${{ secrets.ROBOT_HSLID_EMAIL }}
          e2e_password: ${{ secrets.ROBOT_HSLID_PASSWORD }}

      - name: upload test results
        if: ${{ always() && matrix.runE2ETests }}
        uses: HSLdevcom/jore4-robot/github-actions/upload-results@actions-v1

  run_migration_tests:
    needs: push_to_registry
    name: Run migration tests
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        imagePrefix: ['generic-', 'seed-', 'hsl-']
        include:
          - databaseName: default
            numberOfMigrations: 10
          - databaseName: timetables
            numberOfMigrations: 1 # timetables database doesn't have 10 migrations yet. When it has more, this number should be increased

    steps:
      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: start e2e env
        uses: HSLdevcom/jore4-flux/github-actions/setup-e2e-environment@setup-e2e-environment-v1
        with:
          hasura_version: '${{ env.IMAGE_NAME }}:${{ matrix.imagePrefix }}${{ env.COMMIT_ID }}'

      # Running the last X migrations down and up to make sure that all the hsl-specific and seed
      # data migrations are within the set.
      # When these migrations are run on generic/hsl images, we verify that they work in an empty db
      # When these migrations are run on seed data images, we verify that they work in a db with data
      - name: Run the last few down migrations
        run: |
          docker exec hasura bash -c "cd /tmp/hasura-project && /bin/hasura-cli migrate apply --endpoint http://localhost:8080 --database-name ${{ matrix.databaseName }} --admin-secret hasura --down ${{ matrix.numberOfMigrations }}"

      - name: Run the last few up migrations
        run: |
          docker exec hasura bash -c "cd /tmp/hasura-project && /bin/hasura-cli migrate apply --endpoint http://localhost:8080 --database-name ${{ matrix.databaseName }} --admin-secret hasura --up ${{ matrix.numberOfMigrations }}"
